COMPONENT LIFE CYCLE

	There are three stages in react life cycle
	1) mounting -> The component appear in the screen (appearing).
	2) updating -> The UI or component is changing.
	3) unmounting -> opposite of unmounting (disappearing).


	More you can take example from images.



________________________________________________________________________


useEffect

	The Effect Hook lets you perform side effects in function components:
	Mostly it is used to fetch data from API and display on screen.	

	useEffect(()=>{
		
	}, [])


	Array of dependency tells us what props or state changes we want to trigger the useEffect
	When you want to run useEffect once then you put array empty otherwise if you want to trigger every
	time your component changes then pass that value to array. It will trigger everytime when you make any changes.
	


	

______________________________________________________


	When you want to trigger the useEffect when the component disappears then we can return a function.
	it will executed when the component unmounts.



	useEffect(()=>{
	
		return()=>{

		}

	}, [])










___________________________________________________


STRICT MODE

	It helps to write better code. It will make checks for you and prevent you from making those mistakes in the code.
	StrictMode is a tool for highlighting potential problems in an application. Like Fragment, StrictMode does not 
	render any visible UI. 
	It activates additional checks and warnings for its descendants.

